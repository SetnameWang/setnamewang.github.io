{"version":3,"sources":["Account/Login.js"],"names":["Login","state","containerStyle","isOrDisplay","forms","direction","title","inputs","key","text","isPassword","submitText","onSubmit","toEnterDetail","bind","extraText","login","onExtra","toResetPassword","e","console","debug","username","password","account","this","setState","animation","width","marginLeft","style","output","forEach","item","i","push","className","Form","Fragment","displayForms","display","React","Component","props","form","id","value","FormInput","onChange","displayInputs","onClick","inputValue","event","target","type"],"mappings":"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","file":"static/js/4.076ed48b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {account} from './Account.js';\r\nimport './login.css';\r\n\r\nclass Login extends React.Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      containerStyle: {},\r\n      isOrDisplay: \"block\",\r\n      // init forms, left is Register, right is Login\r\n      forms: [{\r\n          direction: \"left\",\r\n          title: \"Register\",\r\n          inputs: [\r\n            {key: \"username\", text: \"Username\"},\r\n            {key: \"password\", text: \"Password\", isPassword: true},\r\n            {key: \"confirm\", text: \"Confirm Password\", isPassword: true},\r\n          ],\r\n          submitText: \"Next\",\r\n          onSubmit: this.toEnterDetail.bind(this),\r\n        }, {\r\n          direction: \"right\",\r\n          title: \"Login\",\r\n          inputs: [\r\n            {key: \"username\", text: \"Username\"},\r\n            {key: \"password\", text: \"Password\", isPassword: true},\r\n          ],\r\n          submitText: \"Login\",\r\n          extraText: \"Forgot password?\",\r\n          onSubmit: this.login.bind(this),\r\n          onExtra: this.toResetPassword.bind(this),\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  login(e){\r\n    console.debug(e);\r\n    if (e.username && e.password){\r\n      account.login();\r\n    }\r\n  }\r\n\r\n  // animation slide left form to right side\r\n  animation(){\r\n    this.setState({\r\n      containerStyle: {\r\n        animation:\"slide 0.5s\",\r\n        width: 450,\r\n        marginLeft: \"50vw\",\r\n      },\r\n      isOrDisplay: \"none\",\r\n    });\r\n  }\r\n\r\n  // change this.state.forms to \"Enter your details\" form\r\n  toEnterDetail(){\r\n    this.animation();\r\n    this.setState({\r\n      forms: [{\r\n        direction: \"right\",\r\n        style: {width: 450},\r\n        title: \"Enter your details\",\r\n        inputs: [\r\n          {text: \"Email\"},\r\n          {text: \"balabal\", isPassword: true},\r\n          {text: \"balabalbalabal\", isPassword: true},\r\n        ],\r\n        submitText: \"Register\",\r\n      }]});\r\n  }\r\n\r\n  // change this.state.forms to \"Reset password\" form\r\n  toResetPassword(){\r\n    this.animation();\r\n    this.setState({\r\n      forms: [{\r\n        direction: \"right\",\r\n        style: {width: 450},\r\n        title: \"Reset password\",\r\n        inputs: [\r\n          {text: \"Enter your email\"},\r\n        ],\r\n        submitText: \"Reset\",\r\n      }]\r\n    });\r\n  }\r\n\r\n  /*\r\n  default have 2 form, Login and Register,\r\n  change this.state.forms change to new forms\r\n  */\r\n  displayForms(){\r\n    let output = [];\r\n    this.state.forms.forEach((item, i) => {\r\n      output.push((\r\n        <div key={item.title} className={item.direction} style={item.style}>\r\n          <Form\r\n            title={item.title}\r\n            style={item.style}\r\n            inputs={item.inputs}\r\n            submitText={item.submitText}\r\n            extraText={item.extraText}\r\n            onSubmit={item.onSubmit}\r\n            onExtra={item.onExtra}\r\n          />\r\n        </div>\r\n      ));\r\n    });\r\n    return output;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"log-reg\" style={this.state.containerStyle}>\r\n          {this.displayForms()}\r\n          <div className=\"OR\" style={{display: this.state.isOrDisplay}}>OR</div>\r\n        </div>\r\n        <div className=\"background background-1\"></div>\r\n        <div className=\"background background-2\"></div>\r\n        <div className=\"background background-3\"></div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nform component, combine with title, inputs, submit\r\nuseage:\r\n  <Form\r\n    title={String}                                            optional\r\n    inputs={[list]} -> {text: String, isPassword: boolean}    optional\r\n    submitText={String}                                       optional\r\n    extraText={String}                                        optional\r\n    onSubmit={()=>{}}                                         optional\r\n    onExtra={()=>{}}                                          optional\r\n  />\r\n*/\r\nclass Form  extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    // init state\r\n    this.state = {\r\n      title: props.title ? props.title : \"\",\r\n      inputs: props.inputs ? props.inputs : [],\r\n      submitText: props.submitText ? props.submitText: \"\",\r\n      extraText: props.extraText ? props.extraText : \"\",\r\n      //event\r\n      onSubmit: props.onSubmit ? props.onSubmit: ()=>{},\r\n      onExtra: props.onExtra ? props.onExtra : ()=>{},\r\n    };\r\n\r\n    this.form = {};\r\n  }\r\n\r\n  // click event of submit button\r\n  onSubmit(){\r\n    this.state.onSubmit(this.form);\r\n  }\r\n\r\n  // click event of extra button, e.g. Forgot password? button\r\n  onExtra(){\r\n    this.state.onExtra();\r\n  }\r\n\r\n  // handle onchange event of inputs\r\n  onChange(e){\r\n    this.form[e.id] = e.value;\r\n  }\r\n\r\n  // convert input elements to jsx\r\n  displayInputs(){\r\n    let output = []\r\n    this.state.inputs.forEach((item, i) => {\r\n      output.push((\r\n        <FormInput\r\n          key={item.key ? item.key : item.text}\r\n          id={item.key ? item.key : item.text}\r\n          text={item.text}\r\n          isPassword = {item.isPassword}\r\n          onChange={this.onChange.bind(this)}\r\n        />))\r\n    });\r\n    return output;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n    <React.Fragment>\r\n      {this.state.title ? <div className=\"title\">{this.state.title}</div> : <></>}\r\n      <div className=\"form-container\">\r\n        {this.displayInputs()}\r\n      </div>\r\n      <div className=\"form-button\">\r\n        {this.state.extraText ? <label onClick={this.onExtra.bind(this)}>{this.state.extraText}</label> : <></>}\r\n        <button onClick={this.onSubmit.bind(this)}>{this.state.submitText}</button>\r\n      </div>\r\n    </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\ninput component of form,\r\nuseage:\r\n  <FormInput\r\n    key={String},\r\n    id={String},\r\n    text={String},        optional\r\n    isPassword={boolean}, optional\r\n    onChange={()=>{}},    optional\r\n  >\r\nchange of input value will popup to onChange function\r\n*/\r\nclass FormInput extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    // init states\r\n    this.state = {\r\n      id: props.id,\r\n      text: props.text ? props.text : \"\",\r\n      isPassword: props.isPassword ? true : false,\r\n      inputValue: \"\",\r\n      onChange: props.onChange ? props.onChange : ()=>{},\r\n    }\r\n  }\r\n\r\n  // set state of input, then popup to father component\r\n  onChange(event){\r\n    // change input state\r\n    this.setState({\r\n      inputValue: event.target.value,\r\n    });\r\n    // pop up\r\n    this.state.onChange({id: this.state.id, value: event.target.value});\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"input-form\">\r\n        <label>{this.state.text}</label>\r\n        <input type={this.state.isPassword ? \"password\" : \"\"} onChange={this.onChange.bind(this)} value={this.state.inputValue} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}